name: 'Build Quantum Kapital'

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # Apple Silicon M1+
            args: '--target aarch64-apple-darwin'
            rust_targets: 'aarch64-apple-darwin'
          - platform: 'macos-latest' # Intel Macs
            args: '--target x86_64-apple-darwin'
            rust_targets: 'x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # Linux
            args: ''
            rust_targets: ''
          - platform: 'windows-latest' # Windows 11/10
            args: ''
            rust_targets: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust_targets }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install frontend dependencies
        run: pnpm install --frozen-lockfile

      - name: Build frontend
        run: pnpm build

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: quantum-kapital-v__VERSION__
          releaseName: 'Quantum Kapital v__VERSION__'
          releaseBody: |
            ## What's New
            See the [CHANGELOG](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.

            ## Installation
            Download the appropriate file for your platform:
            - **Windows**: `.msi` installer
            - **macOS**: `.dmg` for Apple Silicon or Intel
            - **Linux**: `.AppImage`, `.deb`, or `.rpm`
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

      - name: Ad-hoc sign macOS app
        if: matrix.platform == 'macos-latest'
        run: |
          # Find the .app bundle
          APP_PATH=$(find src-tauri/target -name "*.app" -type d | head -n 1)
          if [ -n "$APP_PATH" ]; then
            echo "Signing app at: $APP_PATH"
            # Ad-hoc sign the app (no certificate required)
            codesign --force --deep --sign - "$APP_PATH"
            # Verify the signature
            codesign --verify --verbose "$APP_PATH"
          else
            echo "No .app bundle found to sign"
          fi
          
          # Also sign the DMG if it exists
          DMG_PATH=$(find src-tauri/target -name "*.dmg" -type f | head -n 1)
          if [ -n "$DMG_PATH" ]; then
            echo "Signing DMG at: $DMG_PATH"
            codesign --force --sign - "$DMG_PATH"
            codesign --verify --verbose "$DMG_PATH"
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: tauri-app-${{ matrix.platform }}-${{ matrix.rust_targets || 'default' }}
          path: |
            src-tauri/target/release/bundle/
            src-tauri/target/*/release/bundle/
          retention-days: 30